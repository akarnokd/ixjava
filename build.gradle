apply plugin: 'java'

sourceCompatibility = '1.6'

group = "com.github.akarnokd" 
ext.githubProjectName = 'ixjava'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}



apply from: file('gradle/maven.gradle')

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

apply plugin: 'maven'
apply plugin: 'osgi'

dependencies {
    compile "com.netflix.rxjava:rxjava-core:0.19.1"
    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile 'org.mockito:mockito-core:1.8.5'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jar {
    manifest {
        name = 'ixjava'
        instruction 'Bundle-Vendor', 'akarnokd'
        instruction 'Bundle-DocURL', 'https://github.com/akarnokd/ixjava'
        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*'
        instruction 'Eclipse-ExtensibleAPI', 'true'
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.9.0'
    }
}

apply plugin: 'license'

apply from: file('gradle/license.gradle')
